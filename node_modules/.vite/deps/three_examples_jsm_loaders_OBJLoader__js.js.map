{"version":3,"file":"three_examples_jsm_loaders_OBJLoader__js.js","names":["name"],"sources":["../../three/examples/jsm/loaders/OBJLoader.js"],"sourcesContent":["import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3,\n\tColor,\n\tSRGBColorSpace\n} from 'three';\n\n// o object_name | g group_name\nconst _object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst _material_library_pattern = /^mtllib /;\n// usemtl material_name\nconst _material_use_pattern = /^usemtl /;\n// usemap map_name\nconst _map_use_pattern = /^usemap /;\nconst _face_vertex_data_separator_pattern = /\\s+/;\n\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\n\nconst _ab = new Vector3();\nconst _cb = new Vector3();\n\nconst _color = new Color();\n\nfunction ParserState() {\n\n\tconst state = {\n\t\tobjects: [],\n\t\tobject: {},\n\n\t\tvertices: [],\n\t\tnormals: [],\n\t\tcolors: [],\n\t\tuvs: [],\n\n\t\tmaterials: {},\n\t\tmaterialLibraries: [],\n\n\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\tthis.object.name = name;\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t\tthis.object = {\n\t\t\t\tname: name || '',\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\tgeometry: {\n\t\t\t\t\tvertices: [],\n\t\t\t\t\tnormals: [],\n\t\t\t\t\tcolors: [],\n\t\t\t\t\tuvs: [],\n\t\t\t\t\thasUVIndices: false\n\t\t\t\t},\n\t\t\t\tmaterials: [],\n\t\t\t\tsmooth: true,\n\n\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\tconst previous = this._finalize( false );\n\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst material = {\n\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\tconst cloned = {\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\treturn material;\n\n\t\t\t\t},\n\n\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t},\n\n\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Inherit previous objects material.\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\n\t\t\t\tdeclared.inherited = true;\n\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t}\n\n\t\t\tthis.objects.push( this.object );\n\n\t\t},\n\n\t\tfinalize: function () {\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t},\n\n\t\taddVertex: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddVertexPoint: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddVertexLine: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.normals;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\t_vA.fromArray( src, a );\n\t\t\t_vB.fromArray( src, b );\n\t\t\t_vC.fromArray( src, c );\n\n\t\t\t_cb.subVectors( _vC, _vB );\n\t\t\t_ab.subVectors( _vA, _vB );\n\t\t\t_cb.cross( _ab );\n\n\t\t\t_cb.normalize();\n\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\n\t\t},\n\n\t\taddColor: function ( a, b, c ) {\n\n\t\t\tconst src = this.colors;\n\t\t\tconst dst = this.object.geometry.colors;\n\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddUV: function ( a, b, c ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t},\n\n\t\taddDefaultUV: function () {\n\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\n\t\t},\n\n\t\taddUVLine: function ( a ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t},\n\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\n\n\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t// normals\n\n\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\tconst nLen = this.normals.length;\n\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t} else {\n\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t} else {\n\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\tthis.addDefaultUV();\n\n\t\t\t}\n\n\t\t},\n\n\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\tthis.addColor( index );\n\n\t\t\t}\n\n\t\t},\n\n\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\tconst vLen = this.vertices.length;\n\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t}\n\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tstate.startObject( '', false );\n\n\treturn state;\n\n}\n\n\n/**\n * A loader for the OBJ format.\n *\n * The [OBJ format]{@link https://en.wikipedia.org/wiki/Wavefront_.obj_file} is a simple data-format that\n * represents 3D geometry in a human readable format as the position of each vertex, the UV position of\n * each texture coordinate vertex, vertex normals, and the faces that make each polygon defined as a list\n * of vertices, and texture vertices.\n *\n * ```js\n * const loader = new OBJLoader();\n * const object = await loader.loadAsync( 'models/monster.obj' );\n * scene.add( object );\n * ```\n *\n * @augments Loader\n * @three_import import { OBJLoader } from 'three/addons/loaders/OBJLoader.js';\n */\nclass OBJLoader extends Loader {\n\n\t/**\n\t * Constructs a new OBJ loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\t/**\n\t\t * A reference to a material creator.\n\t\t *\n\t\t * @type {?MaterialCreator}\n\t\t * @default null\n\t\t */\n\t\tthis.materials = null;\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded OBJ asset\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function(Group)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\t/**\n\t * Sets the material creator for this OBJ. This object is loaded via {@link MTLLoader}.\n\t *\n\t * @param {MaterialCreator} materials - An object that creates the materials for this OBJ.\n\t * @return {OBJLoader} A reference to this loader.\n\t */\n\tsetMaterials( materials ) {\n\n\t\tthis.materials = materials;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Parses the given OBJ data and returns the resulting group.\n\t *\n\t * @param {string} text - The raw OBJ data as a string.\n\t * @return {Group} The parsed OBJ.\n\t */\n\tparse( text ) {\n\n\t\tconst state = new ParserState();\n\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t}\n\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t}\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet result = [];\n\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\tconst line = lines[ i ].trimStart();\n\n\t\t\tif ( line.length === 0 ) continue;\n\n\t\t\tconst lineFirstChar = line.charAt( 0 );\n\n\t\t\t// @todo invoke passed in handler if any\n\t\t\tif ( lineFirstChar === '#' ) continue; // skip comments\n\n\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\tconst data = line.split( _face_vertex_data_separator_pattern );\n\n\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t_color.setRGB(\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] ),\n\t\t\t\t\t\t\t\tSRGBColorSpace\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tstate.colors.push( _color.r, _color.g, _color.b );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst vertexData = lineData.split( _face_vertex_data_separator_pattern );\n\t\t\t\tconst faceVertices = [];\n\n\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst vertex = vertexData[ j ];\n\n\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\tconst v1 = faceVertices[ 0 ];\n\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\tconst v2 = faceVertices[ j ];\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\tlet lineVertices = [];\n\t\t\t\tconst lineUVs = [];\n\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst pointData = lineData.split( ' ' );\n\n\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// o object_name\n\t\t\t\t// or\n\t\t\t\t// g group_name\n\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t// let name = result[ 0 ].slice( 1 ).trim();\n\t\t\t\tconst name = ( ' ' + result[ 0 ].slice( 1 ).trim() ).slice( 1 );\n\n\t\t\t\tstate.startObject( name );\n\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\n\n\t\t\t\t// material\n\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\n\n\t\t\t\t// mtl file\n\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\n\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t// smooth shading\n\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = state.object.currentMaterial();\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t} else {\n\n\t\t\t\t// Handle null terminated files without exception\n\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.finalize();\n\n\t\tconst container = new Group();\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\tif ( hasPrimitives === true ) {\n\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tconst object = state.objects[ i ];\n\t\t\t\tconst geometry = object.geometry;\n\t\t\t\tconst materials = object.materials;\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\n\t\t\t\tlet hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tconst createdMaterials = [];\n\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\tlet material = state.materials[ materialHash ];\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst points = new Points( buffergeometry, material );\n\t\t\t\tcontainer.add( points );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn container;\n\n\t}\n\n}\n\nexport { OBJLoader };\n"],"mappings":"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"}